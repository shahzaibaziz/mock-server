// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TestEndpointReader is a Reader for the TestEndpoint structure.
type TestEndpointReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestEndpointReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestEndpointOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTestEndpointForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTestEndpointInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTestEndpointOK creates a TestEndpointOK with default headers values
func NewTestEndpointOK() *TestEndpointOK {
	return &TestEndpointOK{}
}

/* TestEndpointOK describes a response with status code 200, with default header values.

token is verify
*/
type TestEndpointOK struct {
	Payload interface{}
}

func (o *TestEndpointOK) Error() string {
	return fmt.Sprintf("[POST /test][%d] testEndpointOK  %+v", 200, o.Payload)
}
func (o *TestEndpointOK) GetPayload() interface{} {
	return o.Payload
}

func (o *TestEndpointOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestEndpointForbidden creates a TestEndpointForbidden with default headers values
func NewTestEndpointForbidden() *TestEndpointForbidden {
	return &TestEndpointForbidden{}
}

/* TestEndpointForbidden describes a response with status code 403, with default header values.

token is not verify
*/
type TestEndpointForbidden struct {
	Payload interface{}
}

func (o *TestEndpointForbidden) Error() string {
	return fmt.Sprintf("[POST /test][%d] testEndpointForbidden  %+v", 403, o.Payload)
}
func (o *TestEndpointForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *TestEndpointForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestEndpointInternalServerError creates a TestEndpointInternalServerError with default headers values
func NewTestEndpointInternalServerError() *TestEndpointInternalServerError {
	return &TestEndpointInternalServerError{}
}

/* TestEndpointInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type TestEndpointInternalServerError struct {
	Payload interface{}
}

func (o *TestEndpointInternalServerError) Error() string {
	return fmt.Sprintf("[POST /test][%d] testEndpointInternalServerError  %+v", 500, o.Payload)
}
func (o *TestEndpointInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *TestEndpointInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
