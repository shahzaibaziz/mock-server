// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Identity Provider System",
    "version": "1.0.0"
  },
  "host": "localhost:8091",
  "basePath": "/v1",
  "paths": {
    "/test": {
      "post": {
        "description": "check auth is valid or not",
        "tags": [
          "test"
        ],
        "operationId": "testEndpoint",
        "responses": {
          "200": {
            "description": "token is verify",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "token is not verify",
            "schema": {
              "$ref": "#/responses/403"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/responses/500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "example": "error code"
        },
        "message": {
          "type": "string",
          "example": "error message"
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "401": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "403": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "404": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "409": {
      "description": "Conflict",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "422": {
      "description": "Invalid json",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Identity Provider System",
    "version": "1.0.0"
  },
  "host": "localhost:8091",
  "basePath": "/v1",
  "paths": {
    "/test": {
      "post": {
        "description": "check auth is valid or not",
        "tags": [
          "test"
        ],
        "operationId": "testEndpoint",
        "responses": {
          "200": {
            "description": "token is verify",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "token is not verify",
            "schema": {
              "description": "Forbidden",
              "schema": {
                "$ref": "#/definitions/error"
              }
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/error"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "example": "error code"
        },
        "message": {
          "type": "string",
          "example": "error message"
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "401": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "403": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "404": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "409": {
      "description": "Conflict",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "422": {
      "description": "Invalid json",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
